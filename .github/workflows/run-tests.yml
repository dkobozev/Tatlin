name: Run tests

# should run on every push to any branch except for tags
on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"

jobs:
  run-tests:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # the repo is checkout out to /home/runner/work/tatlin/tatlin

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            libfuse2 \
            libsdl2-2.0-0 \
            xdg-desktop-portal-gtk \
            xdg-user-dirs-gtk \
            freeglut3 \
            libglu1-mesa \
            libnotify-dev \
            libgles2-mesa-dev

      - name: Install Tatlin dependencies
        run: |
          # use prebuilt wxPython wheel to make the installation faster
          pip install -f https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-22.04 -r requirements.txt

      - name: Install Coverage.py
        run: |
          pip install coverage

      - name: Run tests
        run: coverage run -m unittest discover -s tests

      - name: Report coverage
        run: coverage html

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html_report
          path: htmlcov

      - name: Get total
        id: total
        run: |
          echo "total=$(coverage report --format=total)" >> $GITHUB_ENV

      - name: Output total coverage
        run: |
          echo '### Total coverage: ${{ env.total }}%' >> $GITHUB_STEP_SUMMARY

  # in a separate job, take the uploaded HTML report and upload it as a GitHub Pages site to a coverage-reports repository
  upload-coverage:
    needs: run-tests
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download HTML report
        uses: actions/download-artifact@v4
        with:
          name: html_report
          path: htmlcov

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./htmlcov
          destination_dir: tatlin
          external_repository: dkobozev/coverage-reports
          deploy_key: ${{ secrets.COVERAGE_DEPLOY_KEY }}
